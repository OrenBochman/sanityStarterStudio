{"version":3,"sources":["../src/SeoPaneComponent.js"],"names":["SeoPaneComponent","document","options","tab","setTab","_rev","_id","Error","url","badOption","Promise","all","keywords","synonyms","keepPreviousData","data","isLoading","error","errorMessage","message","stack","JSON","stringify","meta","permalink","resultsMapped","title","description","Object","keys","map","key","tabIndex","length","resultsLabels","single","plural","panelIndex","margin","padding","result","resultIndex","borderRadius","width","height","backgroundColor","rating","marginRight","flexShrink","transform","text","__html","propTypes","PropTypes","shape","displayed","string","isRequired","oneOfType","func"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {Text, Stack, Box, Card, Label, Flex, TabList, Tab, TabPanel, Spinner} from '@sanity/ui'\nimport {useQuery} from 'react-query'\nimport delve from 'dlv'\nimport SerpPreview from 'react-serp-preview'\n\nimport asyncCall from './lib/asyncCall'\nimport performSeoReview from './lib/performSeoReview'\nimport {renderRatingToColor} from './lib/renderRatingToColor'\nimport {resultsLabels} from './lib/resultsLabels'\n\nimport ErrorStack from './ErrorStack.js'\nimport Feedback from './Feedback'\n\nexport default function SeoPaneComponent({document, options}) {\n  const [tab, setTab] = useState('')\n\n  // The `revision` key updates when the document does, refreshing the query\n  const {data, isLoading, error} = useQuery(\n    [`seoReview`, document._rev],\n    async () => {\n      if (!document._id) throw new Error('Document is not published')\n      else if (!options.url) badOption('url')\n\n      let [keywords, synonyms, url] = await Promise.all([\n        asyncCall(options.keywords, document),\n        asyncCall(options.synonyms, document),\n        asyncCall(options.url, document),\n      ])\n\n      // Visits document path when strings because the asyncCall will have same value as options\n      if (keywords && keywords === options.keywords) keywords = delve(document, keywords)\n      if (synonyms && synonyms === options.synonyms) synonyms = delve(document, synonyms)\n\n      // Tack on keywords and synonyms to seo review response since we use them.\n      return {\n        ...(await performSeoReview(url, keywords, synonyms)),\n        keywords,\n        synonyms\n      }\n    },\n    {keepPreviousData: true}\n  )\n\n  // Will only show on the first render because of `keepPreviousData` above\n  if (isLoading) {\n    return (\n      <Flex align=\"center\" justify=\"center\" padding={4}>\n        <Spinner muted />\n      </Flex>\n    )\n  }\n\n  // Bail out on error. Unfortunately can't JSON.stringify(Error) to get the stack/message.\n  let errorMessage\n  if (error instanceof Error) {\n    errorMessage = <>{error.message} <ErrorStack stack={error.stack} /></>\n  }\n  else if (!data) errorMessage = 'Empty response'\n  else if (data.error) errorMessage = <pre>{JSON.stringify(data.error)}</pre>\n\n  if (errorMessage) {\n    return <Feedback isError>Error: {errorMessage}</Feedback>\n  }\n\n  const {keywords, meta, permalink, resultsMapped, synonyms} = data\n  return (\n    <Box padding={4}>\n      <Flex direction=\"column\">\n        {meta?.title && (\n          <Card border padding={3}>\n            <SerpPreview\n              title={meta?.title}\n              metaDescription={meta?.description ?? ``}\n              url={permalink}\n            />\n          </Card>\n        )}\n\n        <Flex paddingY={4}>\n          <Stack space={3}>\n            <Label muted size={1}>\n              Keywords\n            </Label>\n            <Text size={2}>{keywords ? `\"${keywords}\"` : `Not Defined`}</Text>\n          </Stack>\n          <Stack space={3} marginLeft={6}>\n            <Label muted size={1}>\n              Synonyms\n            </Label>\n            <Text size={2}>{synonyms ? `\"${synonyms}\"` : `Not Defined`}</Text>\n          </Stack>\n        </Flex>\n\n        <TabList space={1}>\n          {Object.keys(resultsMapped).map((key, tabIndex) => (\n            <Tab\n              aria-controls={key}\n              key={`${key}-button`}\n              id={`${key}-button`}\n              label={`${resultsMapped[key].length} ${\n                resultsMapped[key].length === 1\n                  ? resultsLabels[key].single\n                  : resultsLabels[key].plural\n              }`}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setTab(key)}\n              selected={tab === key || (!tab && !tabIndex)}\n              space={2}\n            />\n          ))}\n        </TabList>\n\n        {Object.keys(resultsMapped).map((key, panelIndex) => (\n          <TabPanel\n            aria-labelledby={key}\n            hidden={(tab && tab !== key) || (!tab && panelIndex)}\n            key={`${key}-panel`}\n            id={`${key}-panel`}\n            style={{margin: `0.5rem 0`, padding: `0.5rem 0`}}\n          >\n            {resultsMapped[key].map((result, resultIndex) => (\n              <Flex key={`result-${resultIndex}`} alignItems=\"center\" style={{margin: `0.5rem 0`}}>\n                <div\n                  style={{\n                    borderRadius: 10,\n                    width: 10,\n                    height: 10,\n                    backgroundColor: renderRatingToColor(result.rating),\n                    marginRight: 10,\n                    flexShrink: 0,\n                    transform: `translateY(6px)`,\n                  }}\n                />\n                {result?.text && <div dangerouslySetInnerHTML={{__html: result.text}} />}\n              </Flex>\n            ))}\n          </TabPanel>\n        ))}\n      </Flex>\n    </Box>\n  )\n}\n\nSeoPaneComponent.propTypes = {\n  document: PropTypes.shape({\n    displayed: PropTypes.shape({\n      _id: PropTypes.string,\n      _rev: PropTypes.string,\n    }),\n  }).isRequired,\n  options: PropTypes.shape({\n    keywords: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    synonyms: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    url: PropTypes.func.isRequired,\n  }).isRequired,\n}\n\nfunction badOption (key) {\n  throw new Error(`seo-pane options: ${key} is invalid or missing`)\n}\n"],"file":"SeoPaneComponent.js"}